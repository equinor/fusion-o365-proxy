
trigger: none
pr: none

schedules:
  - cron: 0 0 1 * *
    always: true
    branches:
      include:
        - master

pool:
  vmImage: "ubuntu-latest"

variables:
  subscriptionService: 'PROJECT_PORTAL (63b791ae-b2bc-41a1-ac66-806c4e69bffe)'
  k8sSecretName: 'aad-client-secret'
  aadApplicationId: '60bb6683-d737-40fc-8024-0ed77b8348cb'

jobs:
  - job: CleanupExpiredKeys
    displayName: 'Cleanup expired client secrets'
    steps:
    - checkout: none
    - task: AzurePowerShell@4
      displayName: 'Remove expired secrets'
      inputs:
        azureSubscription: $(subscriptionService)
        ScriptType: 'InlineScript'
        FailOnStandardError: true
        azurePowerShellVersion: 'LatestVersion'
        Inline: |
          $adSecrets = Get-AzADAppCredential -ApplicationId "$(aadApplicationId)"
          $expiredSecrets = $adSecrets | Where-Object { [DateTime]::Parse($_.EndDate) -lt (Get-Date) }
          
          ## Debug
          Write-Host "Found $($expiredSecrets.Length) expired secrets."
          $expiredSecrets 

          $expiredSecrets | ForEach-Object { 
            Write-Host "Deleting $($_.KeyId) [$($_.StartDate)] -> [$($_.EndDate)]"
            Remove-AzADAppCredential -ApplicationId "$(aadApplicationId)" -KeyId $_.KeyId -Force 
          }

  - deployment: RotateTest
    displayName: 'Rotate client secret in test'
    #pool: Private Docker
    environment: fusion-o365-proxy.fusion-o365-proxy-test

    variables:
      k8sNamespace: fusion-o365-proxy-test
    
    strategy:
      runOnce:
        deploy:
          steps: 
          - task: Kubernetes@1
            displayName: 'Login to cluster'
            inputs:
              command: 'login'            

          - template: templates/ensure-credentials-secret.template.yml
            parameters:
              subscriptionService: $(subscriptionService)
              aadApplicationId: $(aadApplicationId)
              k8sNamespace: $(k8sNamespace)
              k8sSecretName: $(k8sSecretName)

  - deployment: RotateProd
    displayName: 'Rotate client secret in prod'
    #pool: Private Docker
    environment: fusion-o365-proxy.fusion-o365-proxy-prod

    variables:
      k8sNamespace: fusion-o365-proxy-prod
    
    strategy:
      runOnce:
        deploy:
          steps: 
          - task: Kubernetes@1
            displayName: 'Login to cluster'
            inputs:
              command: 'login'            

          - template: templates/ensure-credentials-secret.template.yml
            parameters:
              subscriptionService: $(subscriptionService)
              aadApplicationId: $(aadApplicationId)
              k8sNamespace: $(k8sNamespace)
              k8sSecretName: $(k8sSecretName)              